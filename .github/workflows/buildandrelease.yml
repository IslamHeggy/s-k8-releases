# This is a basic workflow to help you get started with Actions

name: CI
env:
  BUILD_DIR: "/home/azureuser/git-build-dir"
  OUTPUT_DIR:  "output-virtualbox-iso"
  VIRTUAL_BOX_PATH: /home/azureuser/VirtualBox\ VMs/glasswall-proxy/
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
    paths-ignore: 
      - 'diagrams/**'
  pull_request:
    branches: [ master ]
    paths-ignore: 
      - 'diagrams/**'    

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:   
  build-and-release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
   
   # - uses: actions/checkout@v2
    - name: remove previously created OVA and clear direcotries
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        script: |
           rm -rf ${{ env.VIRTUAL_BOX_PATH }} 
  
    - name: Build the OVA on a remote VM
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        timeout: 10000s
        command_timeout: 10000s
        script: |
           cd ${{ env.BUILD_DIR }} &&  git clone https://github.com/k8-proxy/s-k8-releases
           cd ${{ env.BUILD_DIR }}/s-k8-releases && git clone --recursive git@github.com:NourEddineX/k8-reverse-proxy.git
           tar czvf revproxy.tar.gz -C ${{ env.BUILD_DIR }}/s-k8-releases/k8-reverse-proxy/stable-src/ .
           packer build box.json 

    - name: Upload the OVA to S3
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        timeout: 1000s
        script: |
           mv ${{ env.OUTPUT_DIR }}/glasswall-proxy.ova ${{ env.OUTPUT_DIR }}/glasswall-proxy-${{ github.sha }}.ova
           aws s3 cp ${{ env.OUTPUT_DIR }}/glasswall-proxy-${{ github.sha }}.ova s3://glasswall-proxy-ova/
          
